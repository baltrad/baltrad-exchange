# This is the local address the WSGI server will be listening on
baltrad.exchange.uri=https://localhost:8089

# How logging should be performed
baltrad.exchange.log.type=logfile

# The logfile to use if logfile logging is choosen. Is overridden by server options
# baltrad.exchange.log.logfile=/var/log/baltrad/baltrad-exchange-server.log

# The log id used
baltrad.exchange.log.id=baltrad-exchange
  
# The log level to use. All messages with priority >= log.level will be sent to the log output.
# Available are: ERROR, WARNING, INFO, DEBUG
baltrad.exchange.log.level=INFO
  
# Number of threads, backlog and timeout 
baltrad.exchange.threads=20
baltrad.exchange.backlog=10
baltrad.exchange.timeout=10

# Folder to use for temporary files. Default is to use os-std tmp folder.
# baltrad.exchange.tmp.folder=/tmp

# Name of this server. Will be used when communicating with other nodes
baltrad.exchange.node.name = example-server

# Add keyczar to providers if wanted
baltrad.exchange.auth.providers = noauth, crypto

# Default crypto-variant
baltrad.exchange.auth.crypto.root = /etc/baltrad/exchange/crypto-keys
baltrad.exchange.auth.crypto.private.key = /etc/baltrad/exchange/crypto-keys/example-server.private

# It is possible to add public keys to the authenticator by adding them according to the following syntax
# baltrad.exchange.auth.crypto.keys.<node name> = <public key file name>
# Doing this will set the nodename to <node name> and associate this node name with the provided public key
# This is automatically handled for the crypto private key 
#baltrad.exchange.auth.crypto.keys.example-server = /etc/baltrad/exchange/crypto-keys/example-server.public

# If keyczar is in providers. Uncomment and create/import the keyczar private key
# baltrad.exchange.auth.keyczar.keystore_root = /etc/baltrad/bltnode-keys
# baltrad.exchange.auth.keyczar.private.key = /etc/baltrad/bltnode-keys/anders-nzxt.priv

# Comma separated list of directories where json config files are located.
baltrad.exchange.server.config.dirs = /etc/baltrad/exchange/config

# Where the odim source file can be found in rave format.
baltrad.exchange.server.odim_source = /etc/baltrad/rave/config/odim_source.xml

# The database in where some basic data is stored when performing the source-lookup
# this database doesn't need to be persisted on disk since it will be created upon started
# from the above odim_source.xml file
baltrad.exchange.server.source_db_uri = sqlite:///var/cache/baltrad/exchange/source.db

# The database where we want to store all other information. This should preferrably
# be persisted since it will contain statistics and other relevant information
# pointing to a postgres database or similar but we can use sqlite as well. This
# database will contain for example statistics and other data that should be persisted.
baltrad.exchange.server.db_uri = sqlite:///var/lib/baltrad/exchange/baltrad-exchange.db

# Note, these should only be readable by the baltrad user
# and can be created using the following command.
# openssl req  -nodes -new -x509  -keyout server.key -out server.cert
baltrad.exchange.server.certificate = /etc/baltrad/exchange/etc/server.cert
baltrad.exchange.server.key = /etc/baltrad/exchange/etc/server.key

# Statistics
# It is possible to accumulate statistics from the operation. Most of this configuration is performed
# per subscription / publisher / ... and all other cfg-entries that support this functionality
# However, there are some general statistics that is configured from this section.
# This data will be (unless otherwise configured) stored in the database pointed to by baltrad.exchange.server.db_uri

# Keeps track of all incomming files. Will be stored with spid == server-incomming for each source/origin
baltrad.exchange.server.statistics.incomming=false

# Keeps track of all duplicate files. Note, this is from a general point of view. Will be stored with spid == server-duplicate for each source/origin
baltrad.exchange.server.statistics.duplicates=false

# Each incomming file will be stored as one separate entry so that it is possible to
# calculate average process times and other relevant performance numbers.
baltrad.exchange.server.statistics.add_individual_entry=false

# Each incomming file will be associated with a total processing time to be able to check
# if there are any performance issues. This will not result in a total, just individual entries.
baltrad.exchange.server.statistics.file_handling_time=false

# If you need to load different objects from paths that are not in the standard PYTHONPATH,
# then this configuration entries can be used to add paths to the sys.path.
# Sequenced from 1.. and when first number in sequence is missing no more atempts will be done. 
# baltrad.exchange.server.plugin.directory.1 = /etc/baltrad/exchange/plugins